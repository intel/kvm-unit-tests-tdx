##############################################################################
# unittest configuration
#
# [unittest_name]
# file = <name>.flat		# Name of the flat file to be used.
# smp  = <num>			# Number of processors the VM will use
#				# during this test. Use $MAX_SMP to use
#				# the maximum the host supports. Defaults
#				# to one.
# extra_params = -append <params...>	# Additional parameters used.
# arch = i386|x86_64			# Select one if the test case is
#					# specific to only one.
# groups = <group_name1> <group_name2> ...	# Used to identify test cases
#						# with run_tests -g ...
#						# Specify group_name=nodefault
#						# to have test not run by
#						# default
# accel = kvm|tcg		# Optionally specify if test must run with
#				# kvm or tcg. If not specified, then kvm will
#				# be used when available.
# timeout = <duration>		# Optionally specify a timeout.
# check = <path>=<value> # check a file for a particular value before running
#                        # a test. The check line can contain multiple files
#                        # to check separated by a space but each check
#                        # parameter needs to be of the form <path>=<value>
##############################################################################

[apic-split]
file = apic.flat
smp = 2
extra_params = -cpu qemu64,+x2apic,+tsc-deadline -machine kernel_irqchip=split
arch = x86_64
groups = apic

[ioapic-split]
file = ioapic.flat
extra_params = -cpu qemu64 -machine kernel_irqchip=split
arch = x86_64
groups = apic

[x2apic]
file = apic.flat
smp = 2
extra_params = -cpu qemu64,+x2apic,+tsc-deadline
arch = x86_64
timeout = 30
groups = apic

# Hide x2APIC and don't create a Programmable Interval Timer (PIT, a.k.a 8254)
# to allow testing SVM's AVIC, which is disabled if either is exposed to the guest.
[xapic]
file = apic.flat
smp = 2
extra_params = -cpu qemu64,-x2apic,+tsc-deadline -machine pit=off
arch = x86_64
timeout = 60
groups = apic

[ioapic]
file = ioapic.flat
smp = 4
extra_params = -cpu qemu64,+x2apic
arch = x86_64

[cmpxchg8b]
file = cmpxchg8b.flat
arch = i386

[smptest]
file = smptest.flat
smp = 2

[smptest3]
file = smptest.flat
smp = 3

[vmexit_cpuid]
file = vmexit.flat
extra_params = -append 'cpuid'
groups = vmexit

[vmexit_vmcall]
file = vmexit.flat
extra_params = -append 'vmcall'
groups = vmexit

[vmexit_mov_from_cr8]
file = vmexit.flat
extra_params = -append 'mov_from_cr8'
groups = vmexit

[vmexit_mov_to_cr8]
file = vmexit.flat
extra_params = -append 'mov_to_cr8'
groups = vmexit

[vmexit_inl_pmtimer]
file = vmexit.flat
extra_params = -append 'inl_from_pmtimer'
groups = vmexit

[vmexit_ipi]
file = vmexit.flat
smp = 2
extra_params = -append 'ipi'
groups = vmexit

[vmexit_ipi_halt]
file = vmexit.flat
smp = 2
extra_params = -append 'ipi_halt'
groups = vmexit

[vmexit_ple_round_robin]
file = vmexit.flat
extra_params = -append 'ple_round_robin'
groups = vmexit

[vmexit_tscdeadline]
file = vmexit.flat
groups = vmexit
extra_params = -cpu qemu64,+x2apic,+tsc-deadline -append tscdeadline

[vmexit_tscdeadline_immed]
file = vmexit.flat
groups = vmexit
extra_params = -cpu qemu64,+x2apic,+tsc-deadline -append tscdeadline_immed

[vmexit_cr0_wp]
file = vmexit.flat
smp = 2
extra_params = -append 'toggle_cr0_wp'
groups = vmexit

[vmexit_cr4_pge]
file = vmexit.flat
smp = 2
extra_params = -append 'toggle_cr4_pge'
groups = vmexit

[access]
file = access_test.flat
arch = x86_64
extra_params = -cpu max

[access-reduced-maxphyaddr]
file = access_test.flat
arch = x86_64
extra_params = -cpu IvyBridge,phys-bits=36,host-phys-bits=off
check = /sys/module/kvm_intel/parameters/allow_smaller_maxphyaddr=Y

[smap]
file = smap.flat
extra_params = -cpu max

[pku]
file = pku.flat
arch = x86_64
extra_params = -cpu max

[pks]
file = pks.flat
arch = x86_64
extra_params = -cpu max

[asyncpf]
file = asyncpf.flat
extra_params = -m 2048

[emulator]
file = emulator.flat

[eventinj]
file = eventinj.flat

[hypercall]
file = hypercall.flat

[idt_test]
file = idt_test.flat
arch = x86_64

#[init]
#file = init.flat

[memory]
file = memory.flat
extra_params = -cpu max
arch = x86_64

[msr]
# Use GenuineIntel to ensure SYSENTER MSRs are fully preserved, and to test
# SVM emulation of Intel CPU behavior.  Use the max CPU model so that 64-bit
# support follows the host kernel.  Running a 32-bit guest on a 64-bit host
# will fail due to shortcomings in KVM.
file = msr.flat
extra_params = -cpu max,vendor=GenuineIntel

[pmu]
file = pmu.flat
extra_params = -cpu max
check = /proc/sys/kernel/nmi_watchdog=0
accel = kvm
groups = pmu

[pmu_lbr]
arch = x86_64
file = pmu_lbr.flat
extra_params = -cpu host,migratable=no
check = /sys/module/kvm/parameters/ignore_msrs=N
check = /proc/sys/kernel/nmi_watchdog=0
accel = kvm
groups = pmu

[pmu_pebs]
arch = x86_64
file = pmu_pebs.flat
extra_params = -cpu host,migratable=no
check = /proc/sys/kernel/nmi_watchdog=0
accel = kvm
groups = pmu

[vmware_backdoors]
file = vmware_backdoors.flat
extra_params = -machine vmport=on -cpu max
check = /sys/module/kvm/parameters/enable_vmware_backdoor=Y
arch = x86_64
accel = kvm

[realmode]
file = realmode.flat

[s3]
file = s3.flat

[setjmp]
file = setjmp.flat

[sieve]
file = sieve.flat
timeout = 180

[syscall]
file = syscall.flat
arch = x86_64
extra_params = -cpu Opteron_G1,vendor=AuthenticAMD

[tsc]
file = tsc.flat
extra_params = -cpu kvm64,+rdtscp

[tsc_adjust]
file = tsc_adjust.flat
extra_params = -cpu max

[xsave]
file = xsave.flat
arch = x86_64
extra_params = -cpu max

[rmap_chain]
file = rmap_chain.flat
arch = x86_64

[svm]
file = svm.flat
smp = 2
extra_params = -cpu max,+svm -m 4g -append "-pause_filter_test"
arch = x86_64
groups = svm

[svm_pause_filter]
file = svm.flat
extra_params = -cpu max,+svm -overcommit cpu-pm=on -m 4g -append pause_filter_test
arch = x86_64
groups = svm

[svm_npt]
file = svm_npt.flat
smp = 2
extra_params = -cpu max,+svm -m 4g
arch = x86_64

[taskswitch]
file = taskswitch.flat
arch = i386
groups = tasks

[taskswitch2]
file = taskswitch2.flat
arch = i386
groups = tasks

[kvmclock_test]
file = kvmclock_test.flat
smp = 2
extra_params = --append "10000000 `date +%s`"

[pcid-enabled]
file = pcid.flat
extra_params = -cpu qemu64,+pcid,+invpcid
arch = x86_64
groups = pcid

[pcid-disabled]
file = pcid.flat
extra_params = -cpu qemu64,-pcid,-invpcid
arch = x86_64
groups = pcid

[pcid-asymmetric]
file = pcid.flat
extra_params = -cpu qemu64,-pcid,+invpcid
arch = x86_64
groups = pcid

[rdpru]
file = rdpru.flat
extra_params = -cpu max
arch = x86_64

[umip]
file = umip.flat
extra_params = -cpu qemu64,+umip

[la57]
file = la57.flat
arch = i386

[vmx]
file = vmx.flat
extra_params = -cpu max,+vmx -append "-exit_monitor_from_l2_test -ept_access* -vmx_smp* -vmx_vmcs_shadow_test -atomic_switch_overflow_msrs_test -vmx_init_signal_test -vmx_apic_passthrough_tpr_threshold_test -apic_reg_virt_test -virt_x2apic_mode_test -vmx_pf_exception_test -vmx_pf_no_vpid_test -vmx_pf_invvpid_test -vmx_pf_vpid_test"
arch = x86_64
groups = vmx

[ept]
file = vmx.flat
extra_params = -cpu max,host-phys-bits,+vmx -m 2560 -append "ept_access*"
arch = x86_64
groups = vmx

[vmx_eoi_bitmap_ioapic_scan]
file = vmx.flat
smp = 2
extra_params = -cpu max,+vmx -m 2048 -append vmx_eoi_bitmap_ioapic_scan_test
arch = x86_64
groups = vmx

[vmx_hlt_with_rvi_test]
file = vmx.flat
extra_params = -cpu max,+vmx -append vmx_hlt_with_rvi_test
arch = x86_64
groups = vmx
timeout = 10

[vmx_apicv_test]
file = vmx.flat
extra_params = -cpu max,+vmx -append "apic_reg_virt_test virt_x2apic_mode_test"
arch = x86_64
groups = vmx
timeout = 10

[vmx_apic_passthrough_thread]
file = vmx.flat
smp = 2
extra_params = -cpu max,+vmx -m 2048 -append vmx_apic_passthrough_thread_test
arch = x86_64
groups = vmx

[vmx_init_signal_test]
file = vmx.flat
smp = 2
extra_params = -cpu max,+vmx -m 2048 -append vmx_init_signal_test
arch = x86_64
groups = vmx
timeout = 10

[vmx_sipi_signal_test]
file = vmx.flat
smp = 2
extra_params = -cpu max,+vmx -m 2048 -append vmx_sipi_signal_test
arch = x86_64
groups = vmx
timeout = 10

[vmx_apic_passthrough_tpr_threshold_test]
file = vmx.flat
extra_params = -cpu max,+vmx -m 2048 -append vmx_apic_passthrough_tpr_threshold_test
arch = x86_64
groups = vmx
timeout = 10

[vmx_vmcs_shadow_test]
file = vmx.flat
extra_params = -cpu max,+vmx -append vmx_vmcs_shadow_test
arch = x86_64
groups = vmx
timeout = 180

[vmx_pf_exception_test]
file = vmx.flat
extra_params = -cpu max,+vmx -append "vmx_pf_exception_test"
arch = x86_64
groups = vmx nested_exception

[vmx_pf_vpid_test]
file = vmx.flat
extra_params = -cpu max,+vmx -append "vmx_pf_vpid_test"
arch = x86_64
groups = vmx nested_exception
timeout = 240

[vmx_pf_invvpid_test]
file = vmx.flat
extra_params = -cpu max,+vmx -append "vmx_pf_invvpid_test"
arch = x86_64
groups = vmx nested_exception
timeout = 240

[vmx_pf_no_vpid_test]
file = vmx.flat
extra_params = -cpu max,+vmx -append "vmx_pf_no_vpid_test"
arch = x86_64
groups = vmx nested_exception
timeout = 240

[vmx_pf_exception_test_reduced_maxphyaddr]
file = vmx.flat
extra_params = -cpu IvyBridge,phys-bits=36,host-phys-bits=off,+vmx -append "vmx_pf_exception_test vmx_pf_no_vpid_test vmx_pf_vpid_test vmx_pf_invvpid_test"
arch = x86_64
groups = vmx nested_exception
check = /sys/module/kvm_intel/parameters/allow_smaller_maxphyaddr=Y

[debug]
file = debug.flat
arch = x86_64

[hyperv_synic]
file = hyperv_synic.flat
smp = 2
extra_params = -cpu kvm64,hv_vpindex,hv_synic -device hyperv-testdev
groups = hyperv

[hyperv_connections]
file = hyperv_connections.flat
smp = 2
extra_params = -cpu kvm64,hv_vpindex,hv_synic -device hyperv-testdev
groups = hyperv

[hyperv_stimer]
file = hyperv_stimer.flat
smp = 2
extra_params = -cpu kvm64,hv_vpindex,hv_time,hv_synic,hv_stimer -device hyperv-testdev
groups = hyperv

[hyperv_clock]
file = hyperv_clock.flat
smp = 2
extra_params = -cpu kvm64,hv_time
arch = x86_64
groups = hyperv
check = /sys/devices/system/clocksource/clocksource0/current_clocksource=tsc

[intel_iommu]
file = intel-iommu.flat
arch = x86_64
timeout = 30
smp = 4
extra_params = -M q35,kernel-irqchip=split -device intel-iommu,intremap=on,eim=off -device edu

[tsx-ctrl]
file = tsx-ctrl.flat
extra_params = -cpu max
groups = tsx-ctrl

[intel_cet]
file = cet.flat
arch = x86_64
smp = 2
extra_params = -enable-kvm -m 2048 -cpu host

[intel_tdx]
file = intel_tdx.flat
arch = x86_64
